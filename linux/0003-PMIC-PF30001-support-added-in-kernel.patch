From 9c96b41a80a3ffd301032b4454f00efa37f9f56f Mon Sep 17 00:00:00 2001
From: Gaurang Khodifad <gaurang.khodifad@volansystech.com>
Date: Wed, 27 Dec 2017 16:54:13 +0530
Subject: [PATCH] PMIC PF30001 support added in kernel

Signed-off-by: Gaurang Khodifad <gaurang.khodifad@volansystech.com>
---
 drivers/regulator/pfuze100-regulator.c | 189 +++++++++++++--------------------
 include/linux/regulator/pfuze100.h     |  12 +++
 2 files changed, 87 insertions(+), 114 deletions(-)

diff --git a/drivers/regulator/pfuze100-regulator.c b/drivers/regulator/pfuze100-regulator.c
index 4a655c2..bd4909b 100644
--- a/drivers/regulator/pfuze100-regulator.c
+++ b/drivers/regulator/pfuze100-regulator.c
@@ -65,7 +65,7 @@
 #define PFUZE100_VGEN5VOL	0x70
 #define PFUZE100_VGEN6VOL	0x71
 
-enum chips { PFUZE100, PFUZE200, PFUZE3000 = 3 };
+enum chips { PFUZE100, PFUZE200, PFUZE3000 = 3, PFUZE3001 = 0x31, };
 
 struct pfuze_regulator {
 	struct regulator_desc desc;
@@ -77,8 +77,6 @@ struct pfuze_chip {
 	int	chip_id;
 	struct regmap *regmap;
 	struct device *dev;
-	bool need_restore;
-	unsigned int reg_save_array[PFUZE100_REG_SAVED_NUM];
 	struct pfuze_regulator regulator_descs[PFUZE100_MAX_REGULATOR];
 	struct regulator_dev *regulators[PFUZE100_MAX_REGULATOR];
 	struct pfuze_regulator *pfuze_regulators;
@@ -111,6 +109,7 @@ struct pfuze_chip {
 	{.name = "pfuze100", .driver_data = PFUZE100},
 	{.name = "pfuze200", .driver_data = PFUZE200},
 	{.name = "pfuze3000", .driver_data = PFUZE3000},
+	{.name = "pfuze3001", .driver_data = PFUZE3001},
 	{ }
 };
 MODULE_DEVICE_TABLE(i2c, pfuze_device_id);
@@ -119,6 +118,7 @@ struct pfuze_chip {
 	{ .compatible = "fsl,pfuze100", .data = (void *)PFUZE100},
 	{ .compatible = "fsl,pfuze200", .data = (void *)PFUZE200},
 	{ .compatible = "fsl,pfuze3000", .data = (void *)PFUZE3000},
+	{ .compatible = "fsl,pfuze3001", .data = (void *)PFUZE3001},
 	{ }
 };
 MODULE_DEVICE_TABLE(of, pfuze_dt_ids);
@@ -339,7 +339,7 @@ static int pfuze100_set_ramp_delay(struct regulator_dev *rdev, int ramp_delay)
 };
 
 static struct pfuze_regulator pfuze3000_regulators[] = {
-	PFUZE100_SWB_REG(PFUZE3000, SW1A, PFUZE100_SW1ABVOL, 0x1f, pfuze3000_sw1a),
+	PFUZE100_SW_REG(PFUZE3000, SW1A, PFUZE100_SW1ABVOL, 700000, 1475000, 25000),
 	PFUZE100_SW_REG(PFUZE3000, SW1B, PFUZE100_SW1CVOL, 700000, 1475000, 25000),
 	PFUZE100_SWB_REG(PFUZE3000, SW2, PFUZE100_SW2VOL, 0x7, pfuze3000_sw2lo),
 	PFUZE3000_SW3_REG(PFUZE3000, SW3, PFUZE100_SW3AVOL, 900000, 1650000, 50000),
@@ -354,6 +354,19 @@ static int pfuze100_set_ramp_delay(struct regulator_dev *rdev, int ramp_delay)
 	PFUZE100_VGEN_REG(PFUZE3000, VLDO4, PFUZE100_VGEN6VOL, 1800000, 3300000, 100000),
 };
 
+static struct pfuze_regulator pfuze3001_regulators[] = {
+	PFUZE100_SWB_REG(PFUZE3001, SW1, PFUZE100_SW1ABVOL, 0x1f, pfuze3000_sw1a),
+	PFUZE100_SWB_REG(PFUZE3001, SW2, PFUZE100_SW2VOL, 0x7, pfuze3000_sw2lo),
+	PFUZE3000_SW3_REG(PFUZE3001, SW3, PFUZE100_SW3AVOL, 900000, 1650000, 50000),
+	PFUZE100_SWB_REG(PFUZE3001, VSNVS, PFUZE100_VSNVSVOL, 0x7, pfuze100_vsnvs),
+	PFUZE100_FIXED_REG(PFUZE3001, VREFDDR, PFUZE100_VREFDDRCON, 750000),
+	PFUZE100_VGEN_REG(PFUZE3001, VLDO1, PFUZE100_VGEN1VOL, 1800000, 3300000, 100000),
+	PFUZE100_VGEN_REG(PFUZE3001, VLDO2, PFUZE100_VGEN2VOL, 800000, 1550000, 50000),
+	PFUZE3000_VCC_REG(PFUZE3001, VCCSD, PFUZE100_VGEN3VOL, 2850000, 3300000, 150000),
+	PFUZE3000_VCC_REG(PFUZE3001, V33, PFUZE100_VGEN4VOL, 2850000, 3300000, 150000),
+	PFUZE100_VGEN_REG(PFUZE3001, VLDO3, PFUZE100_VGEN5VOL, 1800000, 3300000, 100000),
+	PFUZE100_VGEN_REG(PFUZE3001, VLDO4, PFUZE100_VGEN6VOL, 1800000, 3300000, 100000),
+};
 #ifdef CONFIG_OF
 /* PFUZE100 */
 static struct of_regulator_match pfuze100_matches[] = {
@@ -410,6 +423,22 @@ static int pfuze100_set_ramp_delay(struct regulator_dev *rdev, int ramp_delay)
 	{ .name = "vldo4",	},
 };
 
+/* PFUZE3001 */
+static struct of_regulator_match pfuze3001_matches[] = {
+
+	{ .name = "sw1",	},
+	{ .name = "sw2",	},
+	{ .name = "sw3",	},
+	{ .name = "vsnvs",	},
+	{ .name = "vrefddr",	},
+	{ .name = "vldo1",	},
+	{ .name = "vldo2",	},
+	{ .name = "vccsd",	},
+	{ .name = "v33",	},
+	{ .name = "vldo3",	},
+	{ .name = "vldo4",	},
+};
+
 static struct of_regulator_match *pfuze_matches;
 
 static int pfuze_parse_regulators_dt(struct pfuze_chip *chip)
@@ -429,10 +458,15 @@ static int pfuze_parse_regulators_dt(struct pfuze_chip *chip)
 	}
 
 	switch (chip->chip_id) {
-	case PFUZE3000:
-		pfuze_matches = pfuze3000_matches;
-		ret = of_regulator_match(dev, parent, pfuze3000_matches,
-					 ARRAY_SIZE(pfuze3000_matches));
+		case PFUZE3001:
+			pfuze_matches = pfuze3001_matches;
+			ret = of_regulator_match(dev, parent, pfuze3001_matches,
+					ARRAY_SIZE(pfuze3001_matches));
+			break;
+		case PFUZE3000:
+			pfuze_matches = pfuze3000_matches;
+			ret = of_regulator_match(dev, parent, pfuze3000_matches,
+					ARRAY_SIZE(pfuze3000_matches));
 		break;
 	case PFUZE200:
 		pfuze_matches = pfuze200_matches;
@@ -500,7 +534,8 @@ static int pfuze_identify(struct pfuze_chip *pfuze_chip)
 		 */
 		dev_info(pfuze_chip->dev, "Assuming misprogrammed ID=0x8");
 	} else if ((value & 0x0f) != pfuze_chip->chip_id &&
-		   (value & 0xf0) >> 4 != pfuze_chip->chip_id) {
+		(value & 0xf0) >> 4 != pfuze_chip->chip_id &&
+			(value != pfuze_chip->chip_id)) {
 		/* device id NOT match with your setting */
 		dev_warn(pfuze_chip->dev, "Illegal ID: %x\n", value);
 		return -ENODEV;
@@ -580,31 +615,38 @@ static int pfuze100_regulator_probe(struct i2c_client *client,
 
 	/* use the right regulators after identify the right device */
 	switch (pfuze_chip->chip_id) {
-	case PFUZE3000:
-		pfuze_chip->pfuze_regulators = pfuze3000_regulators;
-		regulator_num = ARRAY_SIZE(pfuze3000_regulators);
-		sw_check_start = PFUZE3000_SW2;
-		sw_check_end = PFUZE3000_SW2;
-		sw_hi = 1 << 3;
-		break;
-	case PFUZE200:
-		pfuze_chip->pfuze_regulators = pfuze200_regulators;
-		regulator_num = ARRAY_SIZE(pfuze200_regulators);
-		sw_check_start = PFUZE200_SW2;
-		sw_check_end = PFUZE200_SW3B;
-		break;
-	case PFUZE100:
-	default:
-		pfuze_chip->pfuze_regulators = pfuze100_regulators;
-		regulator_num = ARRAY_SIZE(pfuze100_regulators);
-		sw_check_start = PFUZE100_SW2;
-		sw_check_end = PFUZE100_SW4;
-		break;
+		case PFUZE3001:
+			pfuze_chip->pfuze_regulators = pfuze3001_regulators;
+			regulator_num = ARRAY_SIZE(pfuze3001_regulators);
+			sw_check_start = PFUZE3001_SW2;
+			sw_check_end = PFUZE3001_SW2;
+			sw_hi = 1 << 3;
+			break;
+		case PFUZE3000:
+			pfuze_chip->pfuze_regulators = pfuze3000_regulators;
+			regulator_num = ARRAY_SIZE(pfuze3000_regulators);
+			sw_check_start = PFUZE3000_SW2;
+			sw_check_end = PFUZE3000_SW2;
+			sw_hi = 1 << 3;
+			break;
+		case PFUZE200:
+			pfuze_chip->pfuze_regulators = pfuze200_regulators;
+			regulator_num = ARRAY_SIZE(pfuze200_regulators);
+			sw_check_start = PFUZE200_SW2;
+			sw_check_end = PFUZE200_SW3B;
+			break;
+		case PFUZE100:
+		default:
+			pfuze_chip->pfuze_regulators = pfuze100_regulators;
+			regulator_num = ARRAY_SIZE(pfuze100_regulators);
+			sw_check_start = PFUZE100_SW2;
+			sw_check_end = PFUZE100_SW4;
+			break;
 	}
 	dev_info(&client->dev, "pfuze%s found.\n",
 		(pfuze_chip->chip_id == PFUZE100) ? "100" :
-		((pfuze_chip->chip_id == PFUZE200) ? "200" : "3000"));
-
+		(((pfuze_chip->chip_id == PFUZE200) ? "200" :
+            ((pfuze_chip->chip_id == PFUZE3000) ? "3000" : "3001"))));
 	memcpy(pfuze_chip->regulator_descs, pfuze_chip->pfuze_regulators,
 		sizeof(pfuze_chip->regulator_descs));
 
@@ -628,7 +670,8 @@ static int pfuze100_regulator_probe(struct i2c_client *client,
 		if (i >= sw_check_start && i <= sw_check_end) {
 			regmap_read(pfuze_chip->regmap, desc->vsel_reg, &val);
 			if (val & sw_hi) {
-				if (pfuze_chip->chip_id == PFUZE3000) {
+				if (pfuze_chip->chip_id == PFUZE3000 ||
+						pfuze_chip->chip_id == PFUZE3001) {
 					desc->volt_table = pfuze3000_sw2hi;
 					desc->n_voltages = ARRAY_SIZE(pfuze3000_sw2hi);
 				} else {
@@ -653,96 +696,14 @@ static int pfuze100_regulator_probe(struct i2c_client *client,
 			return PTR_ERR(pfuze_chip->regulators[i]);
 		}
 	}
-
-
-	if (of_get_property(client->dev.of_node, "fsl,lpsr-mode", NULL))
-		pfuze_chip->need_restore = true;
-
 	return 0;
 }
 
-static int pfuze_reg_save_restore(struct pfuze_chip *pfuze_chip, int start,
-				  int end, int index, bool save)
-{
-	int i, ret;
-
-	for (i = 0; i < end - start + 1; i++) {
-		if (save)
-			ret = regmap_read(pfuze_chip->regmap, start + i,
-					&pfuze_chip->reg_save_array[index + i]);
-		else
-			ret = regmap_write(pfuze_chip->regmap, start + i,
-					pfuze_chip->reg_save_array[index + i]);
-
-		if (ret)
-			return ret;
-	}
-
-	return index + i;
-}
-
-static int pfuze_suspend(struct device *dev)
-{
-	struct pfuze_chip *pfuze_chip = i2c_get_clientdata(to_i2c_client(dev));
-	int index = 0;
-
-	if (pfuze_chip->need_restore) {
-		/* 0x20~0x40 */
-		index = pfuze_reg_save_restore(pfuze_chip, 0x20, 0x40, index, true);
-		if (index < 0)
-			goto err_ret;
-		/* 0x66~0x71 */
-		index = pfuze_reg_save_restore(pfuze_chip, 0x66, 0x71, ++index, true);
-		if (index < 0)
-			goto err_ret;
-		/* 0x7f */
-		index = pfuze_reg_save_restore(pfuze_chip, 0x7f, 0x7f, ++index, true);
-		if (index < 0)
-			goto err_ret;
-	}
-
-	return 0;
-
-err_ret:
-	return index;
-}
-
-static int pfuze_resume(struct device *dev)
-{
-	struct pfuze_chip *pfuze_chip = i2c_get_clientdata(to_i2c_client(dev));
-	int index = 0;
-
-	if (pfuze_chip->need_restore) {
-		/* 0x20~0x40 */
-		index = pfuze_reg_save_restore(pfuze_chip, 0x20, 0x40, index, false);
-		if (index < 0)
-			goto err_ret;
-		/* 0x66~0x71 */
-		index = pfuze_reg_save_restore(pfuze_chip, 0x66, 0x71, ++index, false);
-		if (index < 0)
-			goto err_ret;
-		/* 0x7f */
-		index = pfuze_reg_save_restore(pfuze_chip, 0x7f, 0x7f, ++index, false);
-		if (index < 0)
-			goto err_ret;
-	}
-
-	return 0;
-
-err_ret:
-	return index;
-}
-
-static const struct dev_pm_ops pfuze_pm_ops = {
-	SET_SYSTEM_SLEEP_PM_OPS(pfuze_suspend, pfuze_resume)
-};
-
 static struct i2c_driver pfuze_driver = {
 	.id_table = pfuze_device_id,
 	.driver = {
 		.name = "pfuze100-regulator",
 		.of_match_table = pfuze_dt_ids,
-		.pm = &pfuze_pm_ops,
 	},
 	.probe = pfuze100_regulator_probe,
 };
diff --git a/include/linux/regulator/pfuze100.h b/include/linux/regulator/pfuze100.h
index 70c6c66..df142ac 100644
--- a/include/linux/regulator/pfuze100.h
+++ b/include/linux/regulator/pfuze100.h
@@ -63,6 +63,18 @@
 #define PFUZE3000_VLDO3		11
 #define PFUZE3000_VLDO4		12
 
+#define PFUZE3001_SW1           0
+#define PFUZE3001_SW2           1
+#define PFUZE3001_SW3           2
+#define PFUZE3001_VSNVS         3
+#define PFUZE3001_VREFDDR       4
+#define PFUZE3001_VLDO1         5
+#define PFUZE3001_VLDO2         6
+#define PFUZE3001_VCCSD         7
+#define PFUZE3001_V33           8
+#define PFUZE3001_VLDO3         9
+#define PFUZE3001_VLDO4         10
+
 struct regulator_init_data;
 
 struct pfuze_regulator_platform_data {
-- 
1.9.1

